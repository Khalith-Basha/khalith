' Sample1 [VBScript]
' Created by Application Lifecycle Management
' 10/9/2017 7:19:55 PM
          Public Function GetAttachmentFromTest(ByVal TestName, ByVal FileName, ByVal OutPath)


Dim TestList
Set TestList = TDConnection.TestFactory.NewList("SELECT * FROM VC_TEST WHERE TS_NAME = '" & TestName & "'")
       print "Guru"
GetAttachmentFromTest = GetAttachmentFromTestObject(TestList(1), FileName, OutPath)
End Function

''
'Retrieves an attachment from a test object to a local file.
'@Param Object The test object that contains the attachment
'@Param FileName The File Name of the attachment
'@Param OutPath The path to which to save the file
'@return Path including filename of the attachment on the local filesystem.

'@Description Retrieves an attachment from a test object to a local file.
'@Documentation Retrieves from a test object to
Public Function GetAttachmentFromTestObject(ByRef Object, ByVal FileName, ByVal OutPath)
Dim strRetVal
strRetVal = ""

Dim AttachmentFactory, AttachmentList
Set AttachmentFactory = Object.Attachments
Set AttachmentList = AttachmentFactory.NewList("")

'Ensure path ends with "\"
If Right(OutPath, 1) <> "\" Then
OutPath = OutPath & "\"
End If

Dim Attachment, LongFileName, ExtendedStorage
For Each Attachment In AttachmentList
If StrComp(Attachment.Name(1), FileName, 1) = False Then ' Equal
LongFileName = Attachment.Name 'Actual ServerFileName of attachment in QC.
Set ExtendedStorage = Attachment.AttachmentStorage
ExtendedStorage.ClientPath = OutPath
ExtendedStorage.Load LongFileName, True


Dim objFSO
Set objFSO = CreateObject("Scripting.FileSystemObject")

'Rename(move) file to what we expect the file to be named and not the ServerFileName.
objFSO.MoveFile OutPath & LongFileName, OutPath & FileName
strRetVal = OutPath & FileName

Set objFSO = Nothing
Exit For
End If
Next

GetAttachmentFromTestObject = strRetVal
End Function
Sub Test_Main(Debug, CurrentTestSet, CurrentTSTest, CurrentRun)
  ' *** VBScript Limitation ! ***
  ' "On Error Resume Next" statement suppresses run-time script errors.
  ' To handle run-time error in a right way, you need to put "If Err.Number <> 0 Then"
  ' after each line of code that can cause such a run-time error.
  On Error Resume Next

  ' clear output window
  TDOutput.Clear
   saveTo = "C:\DevOps"
resourceName = "test.txt"
      'Set node = TDConnection.TreeManager.nodebypath("Subject/TestKumar")

'Set qcConn = TDConnection.QCConnection
'Print "Sample1"
       call GetAttachmentFromTest("Sample1_WorkingCode", "sample.bat", "C:\DevOps\")
          If Not Debug Then
  End If
  ' handle run-time errors
  If Err.Number <> 0 Then
    TDOutput.Print "Run-time error [" & Err.Number & "] : " & Err.Description
    ' update execution status in "Test" mode
    If Not Debug Then
      CurrentRun.Status = "Failed"
      CurrentTSTest.Status = "Failed"
    End If
  End If


    '----------------------------



End Sub










' PasorFail [VBScript]
' Created by Application Lifecycle Management
' 10/10/2017 6:30:35 PM
' ====================================================


' ----------------------------------------------------
' Main Test Function
' Debug - Boolean. Equals to false if running in [Test Mode] : reporting to Application Lifecycle Management
' CurrentTestSet - [OTA COM Library].TestSet.
' CurrentTSTest - [OTA COM Library].TSTest.
' CurrentRun - [OTA COM Library].Run.
' ----------------------------------------------------
Sub Test_Main(Debug, CurrentTestSet, CurrentTSTest, CurrentRun)
  ' *** VBScript Limitation ! ***
  ' "On Error Resume Next" statement suppresses run-time script errors.
  ' To handle run-time error in a right way, you need to put "If Err.Number <> 0 Then"
  ' after each line of code that can cause such a run-time error.
  On Error Resume Next

  ' clear output window
  TDOutput.Clear
          ' CurrentRun.Status = "Passed"
     ' CurrentTSTest.Status = "Passed"
      'CurrentTestSet.Status ="Passed"
  ' TODO: put your code here
         CurrentRun.Field("RN_DRAFT") = "N"
         CurrentRun.Status = "Passed"
                        CurrentTestSet.Status="Passed"
                        CurrentTSTest.Status="Passed"
  ''If Not Debug Then
  'End If
  ' handle run-time errors


           'rint "done"
           'CurrentRun.Status = "Failed"
            'urrentTSTest.Status = "Failed"

           'TDHelper.AddStepToRun "Connect to MobileCloud", , , , "Passed"   ' call COM method : Object AddStepToRun ( [in] Name : String; [in,optional] Desc : String; [in,optional] Expected : String; [in,optional] Actual : String; [in,optional] Status : String )
  ' Add new step to current run

          'CurrentTestSet.Status = "Passed"'M method : String RunTestSet ( [in,optional,default("default")] Name : String; [in,optional,default("")] Filter : String; [in,optional,default(True)] Locally : Boolean; [in,optional,default("")] Host : String; [in,optional,default("")] HostGroup : String )
  ' Executes the selected test set and returns accumulated test set execution status.
   ' call COM method : String RunTest ( [in] Name : String; [in] Instance : Integer; [in] TestSet : String; [in,optional,default(True)] Locally : Boolean; [in,optional,default("")] Host : String; [in,optional,default("")] HostGroup : String )
  ' Executes the selected test and returns test execution status.



 '   End If

End Sub
